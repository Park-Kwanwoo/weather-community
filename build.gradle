plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'org.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    asciidoctorExt
}

ext {
    asciidocVersion = "2.0.6.RELEASE"
    snippetsDir = file('build/generated-snippets')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // querydsl
    implementation('com.querydsl:querydsl-core')
    implementation('com.querydsl:querydsl-jpa')

    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
    annotationProcessor('jakarta.persistence:jakarta.persistence-api')
    annotationProcessor('jakarta.annotation:jakarta.annotation-api')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    runtimeOnly 'com.h2database:h2'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.79.Final:osx-aarch_64'

    // Spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.7.3'


    // Spring docs
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

    // json
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // Jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // mysql
    implementation 'mysql:mysql-connector-java'

}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    dependsOn asciidoctor

    copy {
        from asciidoctor.outputDir
        into 'src/main/resources/static/docs'
    }
}

jar {
    enabled(false)
}